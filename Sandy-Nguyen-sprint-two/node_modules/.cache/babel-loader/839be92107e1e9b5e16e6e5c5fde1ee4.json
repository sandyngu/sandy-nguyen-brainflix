{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandy\\\\Documents\\\\BrainStation - Web Development\\\\Sandy-Nguyen-BrainFlix\\\\Sandy-Nguyen-sprint-one\\\\src\\\\components\\\\CommentsSection\\\\CommentsSection.jsx\";\nimport React from 'react';\n\nconst CommentsSection = () => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main__comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"main__comments-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }\n  }, \"3 Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main__author-date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-section__photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"comments-section__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"name\",\n    for: \"comment\",\n    className: \"comments-section__form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, \"JOIN THE CONVERSATION\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"comments-section__form-input\",\n    name: \"comment\",\n    placeholder: \"Write comment here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button comments-section__button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, \"COMMENT\")))));\n};\n\nlet API_KEY = '9a757c70-5aa3-46d0-b4fd-b232e544ed82';\nlet commentsURL = 'https://project-1-api.herokuapp.com/comments?api_key=9a757c70-5aa3-46d0-b4fd-b232e544ed82';\n/*When the window loads, this function creates the parent div*/\n\nwindow.onload = parentFunction();\n\nfunction parentFunction() {\n  let parentElement = document.createElement('div');\n  parentElement.classList.add('comments-section__guestbook');\n  let divider = document.createElement('div');\n  divider.classList.add('divider', 'comments-section__guestbook-divider');\n  let parentParent = document.querySelector('.comments-section');\n  parentParent.appendChild(parentElement);\n  parentElement.appendChild(divider);\n  displayComments();\n}\n\n;\n/*When the parent div is created, the comments are pulled from the API and the elements are made to display the comments. The comments are sorted by timestamp with most recent at the top*/\n\nfunction displayComments() {\n  axios.get(commentsURL).then(res => {\n    res.data.sort(function sortData(a, b) {\n      return b.timestamp - a.timestamp;\n    });\n    res.data.forEach(res => {\n      let divider = document.createElement('div');\n      divider.classList.add('divider', 'comments-section__guestbook-divider');\n      let guestbookContainer = document.createElement('div');\n      guestbookContainer.classList.add('comments-section__guestbook-container');\n      let guestbookPhoto = document.createElement('div');\n      guestbookPhoto.classList.add('comments-section__guestbook-photo');\n      let guestbookEntry = document.createElement('div');\n      guestbookEntry.classList.add('comments-section__guestbook-entry');\n      let guestbookName = document.createElement('h4');\n      guestbookName.classList.add('comments-section__guestbook-name');\n      let guestbookDate = document.createElement('div');\n      guestbookDate.classList.add('comments-section__guestbook-date');\n      let guestbookText = document.createElement('div');\n      guestbookText.classList.add('comments-section__guestbook-text');\n      let guestbook = document.querySelector('.comments-section__guestbook');\n      guestbook.appendChild(guestbookContainer);\n      guestbookContainer.appendChild(guestbookPhoto);\n      guestbookContainer.appendChild(guestbookEntry);\n      guestbookEntry.appendChild(guestbookName);\n      guestbookEntry.appendChild(guestbookDate);\n      guestbookEntry.appendChild(guestbookText);\n      guestbook.appendChild(divider);\n      let time = new Date(res.timestamp);\n      guestbookDate.innerText = time.toLocaleDateString();\n      guestbookName.innerText = res.name;\n      guestbookText.innerText = res.comment;\n    });\n  }).catch(err => console.log(err));\n}\n\n;\n/*This function deletes the parent div, which deletes the loaded comments as they have nothing to append to*/\n\nfunction deleteAll() {\n  document.querySelector('.comments-section__guestbook').remove();\n}\n/*When the form is completed and submitted, the new comment is posted to the existing array in the API, resetting the contents in the form. When certain areas of the comment form are missing, the comment will not be added and an error message will occur. The 3 default comments will be deleted and reloaded on the window with the new comment on top*/\n\n\nconst commentsForm = document.querySelector('.comments-section__form');\ncommentsForm.addEventListener('submit', function commentsFormHandler(event) {\n  event.preventDefault();\n  let name = commentsForm.name.value;\n  let comment = commentsForm.comment.value;\n\n  if (comment == 0) {\n    document.querySelector('.comments-section__form-input-comment').style.backgroundColor = '#FFF0F0';\n    document.querySelector('.comments-section__form-input-comment').style.borderColor = '#FF0000';\n    console.error(\"Don't you have anything nice to say? Include a comment!\");\n  } else {\n    document.querySelector('.comments-section__form-input-comment').style.backgroundColor = '#FAFAFA';\n    document.querySelector('.comments-section__form-input-comment').style.borderColor = '#AFAFAF';\n    {\n      axios.post(commentsURL, {\n        name: commentsForm.name.value,\n        comment: commentsForm.comment.value\n      }).then(res => {\n        commentsForm.reset();\n        deleteAll();\n        parentFunction();\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n});\nexport default CommentsSection;","map":{"version":3,"sources":["C:/Users/sandy/Documents/BrainStation - Web Development/Sandy-Nguyen-BrainFlix/Sandy-Nguyen-sprint-one/src/components/CommentsSection/CommentsSection.jsx"],"names":["React","CommentsSection","API_KEY","commentsURL","window","onload","parentFunction","parentElement","document","createElement","classList","add","divider","parentParent","querySelector","appendChild","displayComments","axios","get","then","res","data","sort","sortData","a","b","timestamp","forEach","guestbookContainer","guestbookPhoto","guestbookEntry","guestbookName","guestbookDate","guestbookText","guestbook","time","Date","innerText","toLocaleDateString","name","comment","catch","err","console","log","deleteAll","remove","commentsForm","addEventListener","commentsFormHandler","event","preventDefault","value","style","backgroundColor","borderColor","error","post","reset"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst CommentsSection = () => {\r\n    return ( \r\n        <section className=\"main__comments\">    \r\n            <div className=\"main__comments-container\">\r\n                <h2 className=\"main__comments-heading\">3 Comments</h2>\r\n                <div className=\"main__author-date-container\">\r\n                    <div className=\"comments-section__photo\"></div>\r\n                    <form className=\"comments-section__form\">\r\n                        <label id=\"name\" for=\"comment\" className=\"comments-section__form-title\">JOIN THE CONVERSATION</label>\r\n                        <br/><textarea type=\"text\" className=\"comments-section__form-input\" name=\"comment\" placeholder=\"Write comment here\"></textarea>\r\n                        <button className=\"button comments-section__button\" type=\"submit\">COMMENT</button>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n        </section>  \r\n    )\r\n}\r\n\r\nlet API_KEY = '9a757c70-5aa3-46d0-b4fd-b232e544ed82';\r\nlet commentsURL = ('https://project-1-api.herokuapp.com/comments?api_key=9a757c70-5aa3-46d0-b4fd-b232e544ed82');\r\n\r\n/*When the window loads, this function creates the parent div*/\r\n\r\nwindow.onload = parentFunction(); \r\n\r\nfunction parentFunction() {\r\n    let parentElement = document.createElement('div');\r\n    parentElement.classList.add('comments-section__guestbook');\r\n    let divider = document.createElement('div');\r\n    divider.classList.add('divider', 'comments-section__guestbook-divider');\r\n    let parentParent = document.querySelector('.comments-section');\r\n    parentParent.appendChild(parentElement);\r\n    parentElement.appendChild(divider); \r\n    \r\n    displayComments();\r\n};\r\n\r\n/*When the parent div is created, the comments are pulled from the API and the elements are made to display the comments. The comments are sorted by timestamp with most recent at the top*/\r\n\r\nfunction displayComments() {\r\n    axios.get(commentsURL)\r\n        .then(res => {\r\n        \r\n        res.data.sort(function sortData(a, b) {\r\n            return b.timestamp - a.timestamp\r\n        });\r\n        \r\n        res.data.forEach(res => {\r\n            \r\n            let divider = document.createElement('div');\r\n            divider.classList.add('divider', 'comments-section__guestbook-divider');\r\n            let guestbookContainer = document.createElement('div');\r\n            guestbookContainer.classList.add('comments-section__guestbook-container');\r\n            let guestbookPhoto = document.createElement('div');\r\n            guestbookPhoto.classList.add('comments-section__guestbook-photo');\r\n            let guestbookEntry = document.createElement('div');\r\n            guestbookEntry.classList.add('comments-section__guestbook-entry');\r\n            let guestbookName = document.createElement('h4');\r\n            guestbookName.classList.add('comments-section__guestbook-name');\r\n            let guestbookDate = document.createElement('div');\r\n            guestbookDate.classList.add('comments-section__guestbook-date');\r\n            let guestbookText = document.createElement('div');\r\n            guestbookText.classList.add('comments-section__guestbook-text');\r\n\r\n            let guestbook = document.querySelector('.comments-section__guestbook');\r\n            \r\n            guestbook.appendChild(guestbookContainer);\r\n            guestbookContainer.appendChild(guestbookPhoto);\r\n            guestbookContainer.appendChild(guestbookEntry);\r\n            guestbookEntry.appendChild(guestbookName);\r\n            guestbookEntry.appendChild(guestbookDate);\r\n            guestbookEntry.appendChild(guestbookText);\r\n            guestbook.appendChild(divider);\r\n            \r\n            let time = new Date(res.timestamp); \r\n            guestbookDate.innerText = time.toLocaleDateString(); \r\n            \r\n            guestbookName.innerText = res.name;\r\n            guestbookText.innerText = res.comment;\r\n        });  \r\n        })  \r\n        .catch(err => console.log(err));\r\n};\r\n\r\n/*This function deletes the parent div, which deletes the loaded comments as they have nothing to append to*/\r\n\r\nfunction deleteAll() {\r\n     document.querySelector('.comments-section__guestbook').remove();\r\n}\r\n\r\n/*When the form is completed and submitted, the new comment is posted to the existing array in the API, resetting the contents in the form. When certain areas of the comment form are missing, the comment will not be added and an error message will occur. The 3 default comments will be deleted and reloaded on the window with the new comment on top*/\r\n\r\nconst commentsForm = document.querySelector('.comments-section__form');\r\n\r\ncommentsForm.addEventListener('submit', function commentsFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    let name = commentsForm.name.value;\r\n    let comment = commentsForm.comment.value; \r\n\r\n        if (comment == 0) {\r\n            document.querySelector('.comments-section__form-input-comment').style.backgroundColor = '#FFF0F0';\r\n            document.querySelector('.comments-section__form-input-comment').style.borderColor = '#FF0000';\r\n            console.error(\"Don't you have anything nice to say? Include a comment!\");\r\n        }\r\n        else {\r\n            document.querySelector('.comments-section__form-input-comment').style.backgroundColor = '#FAFAFA';\r\n            document.querySelector('.comments-section__form-input-comment').style.borderColor = '#AFAFAF';\r\n\r\n            {axios.post(commentsURL, {\r\n            name: commentsForm.name.value,\r\n            comment: commentsForm.comment.value,\r\n            })\r\n                .then(res => {\r\n                    commentsForm.reset();\r\n                    deleteAll();\r\n                    parentFunction();\r\n                    console.log(res);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })        \r\n            }}\r\n})\r\n\r\nexport default CommentsSection;"]},"metadata":{},"sourceType":"module"}